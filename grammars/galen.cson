'scopeName': 'source.galen'
'name': 'Galen'
'fileTypes': ['gspec']
'patterns': [
  {
    'include': '#comment'
  }
  {
    'include': '#object-definition'
  }
  {
    'include': '#tagging-and-sections'
  }
  {
    'include': '#specs'
  }
]
'repository':
  'comment':
    'patterns': [
      'comment': 'Comments'
      'begin': '^\\s*#'
      'beginCaptures':
        '0':
          'name': 'punctuation.definition.comment.galen'
      'end': '\\n'
      'name': 'comment.line.number-sign.galen'
    ]
  'object-definition':
    'patterns': [
      {
        'comment': 'Object definition keyword'
        'match': '^(@(?:objects|groups))$'
        'name': 'storage.type.galen'
      }
      {
        'comment': 'Object definition locators'
        'match': '^\\s+([^\\s]+|\\(.+\\))\\s+(?:(?:(?:(@)(?:(\\()(.+)(\\))))|(?:(@grouped)(?:(\\()(.+)(\\)))))\\s+)?(css|id|xpath)?\\s+(.+)$'
        'captures':
          '1':
            'name': 'entity.name.type.object.galen'
          '2':
            'name': 'support.function.corrections.gspec'
          '3':
            'name': 'punctuation.definition.parameters.begin.bracket.galen'
          '4':
            'name': 'variable.parameter.corrections.galen'
          '5':
            'name': 'punctuation.definition.parameters.end.bracket.galen'
          '6':
            'name': 'support.function.groups.gspec'
          '7':
            'name': 'punctuation.definition.parameters.begin.bracket.galen'
          '8':
            'name': 'variable.parameter.groups.galen'
          '9':
            'name': 'punctuation.definition.parameters.end.bracket.galen'
          '10':
            'name': 'support.type.locators.galen'
          '11':
            'name': 'entity.other.attribute-name.selector.galen'
      }
    ]
  'tagging-and-sections':
    'patterns': [
      {
        'comment': 'Section declaration'
        'match': '^\\s*(= .+ =)$'
        'captures':
          '1':
            'name': 'entity.name.function.section.galen'
      }
      {
        'comment': 'Object groups'
        'match': '^\\s+(&?.+:)$'
        'captures':
          '1':
            'name': 'entity.name.type.object.galen'
      }
    ]
  'specs':
    'patterns': [
      {
        'comment': 'Spec near'
        'match': '^\\s+(near)\\s'
        'captures':
          '1':
            'name': 'keyword.control.near.galen'
      }
      {
        'comment': 'Spec above'
        'match': '^\\s+(above)\\s'
        'captures':
          '1':
            'name': 'keyword.control.above.galen'
      }
      {
        'comment': 'Spec below'
        'match': '^\\s+(below)\\s'
        'captures':
          '1':
            'name': 'keyword.control.below.galen'
      }
      {
        'comment': 'Spec left-of'
        'match': '^\\s+(left-of)\\s'
        'captures':
          '1':
            'name': 'keyword.control.left-of.galen'
      }
      {
        'comment': 'Spec right-of'
        'match': '^\\s+(right-of)\\s'
        'captures':
          '1':
            'name': 'keyword.control.right-of.galen'
      }
      {
        'comment': 'Spec inside'
        'match': '^\\s+(inside(?: partly)?)\\s'
        'captures':
          '1':
            'name': 'keyword.control.inside.galen'
      }
      {
        'comment': 'Spec width'
        'match': '^\\s+(width)\\s'
        'captures':
          '1':
            'name': 'keyword.control.width.galen'
      }
      {
        'comment': 'Spec height'
        'match': '^\\s+(height)\\s'
        'captures':
          '1':
            'name': 'keyword.control.height.galen'
      }
      {
        'comment': 'Spec aligned'
        'match': '^\\s+(aligned(?: horizontally(?! (left|right))| vertically(?! (top| bottom))) (?:all|centered|top|bottom|left|right))\\s'
        'captures':
          '1':
            'name': 'keyword.control.aligned.galen'
      }
      {
        'comment': 'Spec text'
        'match': '^\\s+(text (?:(lowercase )?is|(lowercase )?contains|(uppercase )?starts|(lowercase )?ends|(lowercase )?matches))\\s'
        'captures':
          '1':
            'name': 'keyword.control.text.galen'
      }
      {
        'comment': 'Spec css'
        'match': '^\\s+(css).+(is|starts|ends|contains|matches)\\s'
        'captures':
          '1':
            'name': 'keyword.control.css.galen'
          '2':
            'name': 'keyword.control.css.galen'
      }
      {
        'comment': 'Spec centered'
        'match': '^\\s+(centered (?:horizontally|vertically|all) (?:inside|on))\\s'
        'captures':
          '1':
            'name': 'keyword.control.centered.galen'
      }
      {
        'comment': 'Spec absent'
        'match': '^\\s+(absent)$'
        'captures':
          '1':
            'name': 'keyword.control.absent.galen'
      }
      {
        'comment': 'Spec visible'
        'match': '^\\s+(visible)$'
        'captures':
          '1':
            'name': 'keyword.control.visible.galen'
      }
      {
        'comment': 'Spec contains'
        'match': '^\\s+(contains(?: partly)?)\\s'
        'captures':
          '1':
            'name': 'keyword.control.contains.galen'
      }
      {
        'comment': 'Spec on'
        'match': '^\\s+(on (?:top|bottom) (?:left|right))\\s'
        'captures':
          '1':
            'name': 'keyword.control.on.galen'
      }
      {
        'comment': 'Spec component'
        'match': '^\\s+(component(?: frame)?)\\s'
        'captures':
          '1':
            'name': 'keyword.control.component.galen'
      }
      {
        'comment': 'Spec count'
        'match': '^\\s+(count (?:any|visible|absent))\\s'
        'captures':
          '1':
            'name': 'keyword.control.count.galen'
      }
      {
        'comment': 'Spec color scheme'
        'match': '^\\s+(color-scheme)\\s'
        'captures':
          '1':
            'name': 'keyword.control.color-scheme.galen'
      }
      {
        'comment': 'Spec image'
        'match': '^\\s+(image file)\\s'
        'captures':
          '1':
            'name': 'keyword.control.image.galen'
      }
    ]
